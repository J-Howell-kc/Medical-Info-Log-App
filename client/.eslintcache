[{"C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\index.js":"1","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\reportWebVitals.js":"2","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\App.js":"3","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Sidebar\\index.js":"4","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Medications\\index.js":"5","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Header\\index.js":"6","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Biovitals\\index.js":"7","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Emergencycontacts\\index.js":"8","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Allergies\\index.js":"9","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Nutrition\\index.js":"10","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Symptoms\\index.js":"11"},{"size":550,"mtime":1677720944908,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1677551527160,"results":"14","hashOfConfig":"13"},{"size":4124,"mtime":1677877964239,"results":"15","hashOfConfig":"13"},{"size":2452,"mtime":1677877964254,"results":"16","hashOfConfig":"13"},{"size":2977,"mtime":1677877964250,"results":"17","hashOfConfig":"13"},{"size":1246,"mtime":1677877964249,"results":"18","hashOfConfig":"13"},{"size":1755,"mtime":1677877964246,"results":"19","hashOfConfig":"13"},{"size":2989,"mtime":1677877964247,"results":"20","hashOfConfig":"13"},{"size":2973,"mtime":1677877964243,"results":"21","hashOfConfig":"13"},{"size":2973,"mtime":1677877964252,"results":"22","hashOfConfig":"13"},{"size":2971,"mtime":1677877964255,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jd0dj1",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\index.js",[],"C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\reportWebVitals.js",[],"C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\App.js",["49","50"],"import React from \"react\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Selector from \"./components/Header\";\r\nimport Biovitals from \"./components/Biovitals\";\r\nimport Symptoms from \"./components/Symptoms\";\r\nimport Emergencycontacts from \"./components/Emergencycontacts\";\r\nimport Allergies from \"./components/Allergies\";\r\nimport Medications from \"./components/Medications\";\r\nimport Nutrition from \"./components/Nutrition\";\r\nimport { useState } from \"react\";\r\nimport './app.css'\r\n// import '~antd/dist/antd.css';\r\nimport { Layout, Space } from \"antd\";\r\nconst { Header, Footer, Content } = Layout;\r\n\r\n\r\nconst headerStyle = {\r\n  textAlign: \"center\",\r\n  color: \"#fff\",\r\n  width: \"100%\",\r\n  paddingInline: 50,\r\n  backgroundColor: \"#7dbcea\",\r\n};\r\nconst contentStyle = {\r\n  textAlign: \"center\",\r\n  color: \"#fff\",\r\n  backgroundColor: \"#108ee9\",\r\n};\r\n\r\nconst footerStyle = {\r\n  textAlign: \"center\",\r\n  color: \"#fff\",\r\n  backgroundColor: \"#7dbcea\",\r\n};\r\nconst App = () => {\r\n  \r\n  const [currentTab, setTab] = useState(\"symptoms\");\r\n\r\n  const renderTab = () => {\r\n    switch (currentTab) {\r\n      case \"biovitals\":\r\n        return <Biovitals />;\r\n\r\n      case \"medications\":\r\n        return <Medications />;\r\n\r\n     case \"allergies\":\r\n       return <Allergies />;\r\n\r\n     case \"nutrition\":\r\n         return <Nutrition />;\r\n\r\n       case \"symptoms\":\r\n        return <Symptoms />;\r\n\r\n      //   case \"emergencycontacts\":\r\n      //   return <EmergencyContacts />;\r\n\r\n      default:\r\n        return <Biovitals />;\r\n    }\r\n  };\r\n  return (\r\n  <Space\r\n    direction=\"vertical\"\r\n    style={{\r\n      width: \"100%\",\r\n    }}\r\n    \r\n  >\r\n    <Layout>\r\n      \r\n        <Sidebar />\r\n    \r\n      <Layout>\r\n        <Header style={headerStyle}>\r\n          <Selector />\r\n          </Header>\r\n        <Content style={contentStyle}>\r\n          {/* <Biovitals /> */}\r\n          {renderTab()}\r\n        </Content>\r\n        <Footer style={footerStyle}>HAMS by Group 2 2023</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  </Space>\r\n);\r\n};\r\nexport default App;\r\n\r\n// import {\r\n//   ApolloClient,\r\n//   InMemoryCache,\r\n//   ApolloProvider,\r\n//   createHttpLink,\r\n// } from '@apollo/client';\r\n// import { setContext } from '@apollo/client/link/context';\r\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n\r\n// import Home from './pages/Home';\r\n// import Profile from './pages/Profile';\r\n// import Signup from './pages/Signup';\r\n// import Login from './pages/Login';\r\n// import Header from './components/Header';\r\n// import Footer from './components/Footer';\r\n\r\n// const httpLink = createHttpLink({\r\n//   uri: '/graphql',\r\n// });\r\n\r\n// const authLink = setContext((_, { headers }) => {\r\n//   // get the authentication token from local storage if it exists\r\n//   const token = localStorage.getItem('id_token');\r\n//   // return the headers to the context so httpLink can read them\r\n//   return {\r\n//     headers: {\r\n//       ...headers,\r\n//       authorization: token ? `Bearer ${token}` : '',\r\n//     },\r\n//   };\r\n// });\r\n\r\n// const client = new ApolloClient({\r\n//   link: authLink.concat(httpLink),\r\n//   cache: new InMemoryCache(),\r\n// });\r\n\r\n//     <ApolloProvider client={client}>\r\n//       <Router>\r\n//         <div className=\"flex-column justify-flex-start min-100-vh\">\r\n//           <Header />\r\n//           <div className=\"container\">\r\n//             <Routes>\r\n//               <Route\r\n//                 path=\"/\"\r\n//                 element={<Home />}\r\n//               />\r\n//               <Route\r\n//                 path=\"/login\"\r\n//                 element={<Login />}\r\n//               />\r\n//               <Route\r\n//                 path=\"/signup\"\r\n//                 element={<Signup />}\r\n//               />\r\n//               <Route\r\n//                 path=\"/me\"\r\n//                 element={<Profile />}\r\n//               />\r\n//               <Route\r\n//                 path=\"/profiles/:profileId\"\r\n//                 element={<Profile />}\r\n//               />\r\n//             </Routes>\r\n//           </div>\r\n//           <Footer />\r\n//         </div>\r\n//       </Router>\r\n//     </ApolloProvider>\r\n//   );\r\n// }\r\n","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Sidebar\\index.js",["51"],"import { Layout, Calendar, theme } from \"antd\";\r\nimport { Button, Checkbox, Form, Input } from \"antd\";\r\nconst { Sider } = Layout;\r\n\r\nconst siderStyle = {\r\n  textAlign: \"center\",\r\n  height: \"100vh\",\r\n  width: 300,\r\n  color: \"#fff\",\r\n  backgroundColor: \"#fff\",\r\n  flex: 'none',\r\n}\r\nconst onFinish = (values) => {\r\n  console.log(\"Success:\", values);\r\n};\r\nconst onFinishFailed = (errorInfo) => {\r\n  console.log(\"Failed:\", errorInfo);\r\n};\r\n\r\nconst onPanelChange = (value, mode) => {\r\n  console.log(value.format(\"YYYY-MM-DD\"), mode);\r\n};\r\nconst Sidebar = () => {\r\n  const { token } = theme.useToken();\r\n  const wrapperStyle = {\r\n    width: '20%',\r\n    border: `1px solid ${token.colorBorderSecondary}`,\r\n    borderRadius: token.borderRadiusLG,\r\n    // backgroundColor: '#7dbcea',\r\n  };\r\n  return (\r\n    \r\n      <Sider id='sidercontainer' style={siderStyle} width={300}>\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        style={{\r\n          maxWidth: 600,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"remember\"\r\n          valuePropName=\"checked\"\r\n          wrapperCol={{\r\n            offset: 4,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 4,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <Calendar style={{ width: '100%'}} fullscreen={false} onPanelChange={onPanelChange} />\r\n      </Sider>\r\n  \r\n  );\r\n};\r\nexport default Sidebar;\r\n\r\n\r\n","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Medications\\index.js",[],"C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Header\\index.js",["52"],"import { Layout, Menu, Button} from 'antd';\r\nconst { Header } = Layout;\r\nconst Selector = () => {\r\n\r\n  const headerStyle = {\r\n    // backgroundColor: '#7dbcea',\r\n  }\r\n\r\n\r\n  return (\r\n      <Layout className=\"layout\">\r\n        <Header  style={headerStyle} >\r\n          <div className=\"logo\" />\r\n          <Menu\r\n            theme=\"dark\"\r\n             \r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={['1']}\r\n            items={[\r\n              {\r\n                label: 'Bio/Vitals',\r\n                \r\n                key: 'biovitals',\r\n               \r\n              },\r\n              {\r\n                label: 'Medications',\r\n                key: 'medications', \r\n              },\r\n              {\r\n                label: 'Allergies',\r\n                key: 'allergies',\r\n              },\r\n              {\r\n                label: 'Nutrition',\r\n                key: 'nutrition',\r\n              },\r\n              {\r\n                label: 'Symptoms',\r\n                key: 'symptoms',\r\n              },\r\n              {\r\n                label: 'Emergency Contacts',\r\n                key: 'emergencycontacts',\r\n              },\r\n            ]}\r\n          />\r\n        </Header>\r\n      </Layout>\r\n  );\r\n};\r\nexport default Selector;\r\n","C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Biovitals\\index.js",[],"C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Emergencycontacts\\index.js",[],"C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Allergies\\index.js",[],"C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Nutrition\\index.js",[],"C:\\Users\\chaot\\Documents\\Bootcamp\\my_assignments\\project3\\Medical-Info-Log-App\\client\\src\\components\\Symptoms\\index.js",[],{"ruleId":"53","severity":1,"message":"54","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":37,"column":22,"nodeType":"55","messageId":"56","endLine":37,"endColumn":28},{"ruleId":"53","severity":1,"message":"58","line":25,"column":9,"nodeType":"55","messageId":"56","endLine":25,"endColumn":21},{"ruleId":"53","severity":1,"message":"59","line":1,"column":24,"nodeType":"55","messageId":"56","endLine":1,"endColumn":30},"no-unused-vars","'Emergencycontacts' is defined but never used.","Identifier","unusedVar","'setTab' is assigned a value but never used.","'wrapperStyle' is assigned a value but never used.","'Button' is defined but never used."]