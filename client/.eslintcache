[{"/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/index.js":"1","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/App.js":"2","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/reportWebVitals.js":"3","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Sidebar/index.js":"4","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Header/index.js":"5","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Biovitals/index.js":"6","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Symptoms/index.js":"7","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Emergencycontacts/index.js":"8","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Allergies/index.js":"9","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Medications/index.js":"10","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Nutrition/index.js":"11"},{"size":532,"mtime":1677710950790,"results":"12","hashOfConfig":"13"},{"size":3963,"mtime":1677865853070,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1677551310642,"results":"15","hashOfConfig":"13"},{"size":2345,"mtime":1677813790498,"results":"16","hashOfConfig":"13"},{"size":1194,"mtime":1677864928431,"results":"17","hashOfConfig":"13"},{"size":1675,"mtime":1677865478424,"results":"18","hashOfConfig":"13"},{"size":2959,"mtime":1677986179420,"results":"19","hashOfConfig":"13"},{"size":2880,"mtime":1677865220146,"results":"20","hashOfConfig":"13"},{"size":2864,"mtime":1677865299797,"results":"21","hashOfConfig":"13"},{"size":2868,"mtime":1677865198884,"results":"22","hashOfConfig":"13"},{"size":2864,"mtime":1677985262513,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"861qe7",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/index.js",[],["50","51"],"/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/App.js",["52","53"],"import React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Selector from \"./components/Header\";\nimport Biovitals from \"./components/Biovitals\";\nimport Symptoms from \"./components/Symptoms\";\nimport Emergencycontacts from \"./components/Emergencycontacts\";\nimport Allergies from \"./components/Allergies\";\nimport Medications from \"./components/Medications\";\nimport Nutrition from \"./components/Nutrition\";\nimport { useState } from \"react\";\nimport './app.css'\n// import '~antd/dist/antd.css';\nimport { Layout, Space } from \"antd\";\nconst { Header, Footer, Content } = Layout;\n\n\nconst headerStyle = {\n  textAlign: \"center\",\n  color: \"#fff\",\n  width: \"100%\",\n  paddingInline: 50,\n  backgroundColor: \"#7dbcea\",\n};\nconst contentStyle = {\n  textAlign: \"center\",\n  color: \"#fff\",\n  backgroundColor: \"#108ee9\",\n};\n\nconst footerStyle = {\n  textAlign: \"center\",\n  color: \"#fff\",\n  backgroundColor: \"#7dbcea\",\n};\nconst App = () => {\n  \n  const [currentTab, setTab] = useState(\"symptoms\");\n\n  const renderTab = () => {\n    switch (currentTab) {\n      case \"biovitals\":\n        return <Biovitals />;\n\n      case \"medications\":\n        return <Medications />;\n\n     case \"allergies\":\n       return <Allergies />;\n\n     case \"nutrition\":\n         return <Nutrition />;\n\n       case \"symptoms\":\n        return <Symptoms />;\n\n      //   case \"emergencycontacts\":\n      //   return <EmergencyContacts />;\n\n      default:\n        return <Biovitals />;\n    }\n  };\n  return (\n  <Space\n    direction=\"vertical\"\n    style={{\n      width: \"100%\",\n    }}\n    \n  >\n    <Layout>\n      \n        <Sidebar />\n    \n      <Layout>\n        <Header style={headerStyle}>\n          <Selector />\n          </Header>\n        <Content style={contentStyle}>\n          {/* <Biovitals /> */}\n          {renderTab()}\n        </Content>\n        <Footer style={footerStyle}>HAMS by Group 2 2023</Footer>\n      </Layout>\n    </Layout>\n  </Space>\n);\n};\nexport default App;\n\n// import {\n//   ApolloClient,\n//   InMemoryCache,\n//   ApolloProvider,\n//   createHttpLink,\n// } from '@apollo/client';\n// import { setContext } from '@apollo/client/link/context';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// import Home from './pages/Home';\n// import Profile from './pages/Profile';\n// import Signup from './pages/Signup';\n// import Login from './pages/Login';\n// import Header from './components/Header';\n// import Footer from './components/Footer';\n\n// const httpLink = createHttpLink({\n//   uri: '/graphql',\n// });\n\n// const authLink = setContext((_, { headers }) => {\n//   // get the authentication token from local storage if it exists\n//   const token = localStorage.getItem('id_token');\n//   // return the headers to the context so httpLink can read them\n//   return {\n//     headers: {\n//       ...headers,\n//       authorization: token ? `Bearer ${token}` : '',\n//     },\n//   };\n// });\n\n// const client = new ApolloClient({\n//   link: authLink.concat(httpLink),\n//   cache: new InMemoryCache(),\n// });\n\n//     <ApolloProvider client={client}>\n//       <Router>\n//         <div className=\"flex-column justify-flex-start min-100-vh\">\n//           <Header />\n//           <div className=\"container\">\n//             <Routes>\n//               <Route\n//                 path=\"/\"\n//                 element={<Home />}\n//               />\n//               <Route\n//                 path=\"/login\"\n//                 element={<Login />}\n//               />\n//               <Route\n//                 path=\"/signup\"\n//                 element={<Signup />}\n//               />\n//               <Route\n//                 path=\"/me\"\n//                 element={<Profile />}\n//               />\n//               <Route\n//                 path=\"/profiles/:profileId\"\n//                 element={<Profile />}\n//               />\n//             </Routes>\n//           </div>\n//           <Footer />\n//         </div>\n//       </Router>\n//     </ApolloProvider>\n//   );\n// }\n","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/reportWebVitals.js",[],"/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Sidebar/index.js",["54"],"import { Layout, Calendar, theme } from \"antd\";\nimport { Button, Checkbox, Form, Input } from \"antd\";\nconst { Sider } = Layout;\n\nconst siderStyle = {\n  textAlign: \"center\",\n  height: \"100vh\",\n  width: 300,\n  color: \"#fff\",\n  backgroundColor: \"#fff\",\n  flex: 'none',\n}\nconst onFinish = (values) => {\n  console.log(\"Success:\", values);\n};\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nconst onPanelChange = (value, mode) => {\n  console.log(value.format(\"YYYY-MM-DD\"), mode);\n};\nconst Sidebar = () => {\n  const { token } = theme.useToken();\n  const wrapperStyle = {\n    width: '20%',\n    border: `1px solid ${token.colorBorderSecondary}`,\n    borderRadius: token.borderRadiusLG,\n    // backgroundColor: '#7dbcea',\n  };\n  return (\n    \n      <Sider id='sidercontainer' style={siderStyle} width={300}>\n      <Form\n        name=\"basic\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n        style={{\n          maxWidth: 600,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"remember\"\n          valuePropName=\"checked\"\n          wrapperCol={{\n            offset: 4,\n            span: 16,\n          }}\n        >\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item\n          wrapperCol={{\n            offset: 4,\n            span: 16,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      <Calendar style={{ width: '100%'}} fullscreen={false} onPanelChange={onPanelChange} />\n      </Sider>\n  \n  );\n};\nexport default Sidebar;\n\n\n","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Header/index.js",["55"],"import { Layout, Menu, Button} from 'antd';\nconst { Header } = Layout;\nconst Selector = () => {\n\n  const headerStyle = {\n    // backgroundColor: '#7dbcea',\n  }\n\n\n  return (\n      <Layout className=\"layout\">\n        <Header  style={headerStyle} >\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n             \n            mode=\"horizontal\"\n            defaultSelectedKeys={['1']}\n            items={[\n              {\n                label: 'Bio/Vitals',\n                \n                key: 'biovitals',\n               \n              },\n              {\n                label: 'Medications',\n                key: 'medications', \n              },\n              {\n                label: 'Allergies',\n                key: 'allergies',\n              },\n              {\n                label: 'Nutrition',\n                key: 'nutrition',\n              },\n              {\n                label: 'Symptoms',\n                key: 'symptoms',\n              },\n              {\n                label: 'Emergency Contacts',\n                key: 'emergencycontacts',\n              },\n            ]}\n          />\n        </Header>\n      </Layout>\n  );\n};\nexport default Selector;\n","/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Biovitals/index.js",[],"/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Symptoms/index.js",["56","57","58","59","60","61","62","63"],"/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Emergencycontacts/index.js",[],"/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Allergies/index.js",[],"/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Medications/index.js",[],"/Users/brandonjhowell/bootcamp/Assignments/Medical-Info-Log-App/client/src/components/Nutrition/index.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":37,"column":22,"nodeType":"70","messageId":"71","endLine":37,"endColumn":28},{"ruleId":"68","severity":1,"message":"73","line":25,"column":9,"nodeType":"70","messageId":"71","endLine":25,"endColumn":21},{"ruleId":"68","severity":1,"message":"74","line":1,"column":24,"nodeType":"70","messageId":"71","endLine":1,"endColumn":30},{"ruleId":"68","severity":1,"message":"75","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":18},{"ruleId":"68","severity":1,"message":"76","line":7,"column":3,"nodeType":"70","messageId":"71","endLine":7,"endColumn":8},{"ruleId":"68","severity":1,"message":"77","line":9,"column":3,"nodeType":"70","messageId":"71","endLine":9,"endColumn":11},{"ruleId":"68","severity":1,"message":"78","line":11,"column":3,"nodeType":"70","messageId":"71","endLine":11,"endColumn":14},{"ruleId":"68","severity":1,"message":"79","line":12,"column":3,"nodeType":"70","messageId":"71","endLine":12,"endColumn":13},{"ruleId":"68","severity":1,"message":"80","line":13,"column":3,"nodeType":"70","messageId":"71","endLine":13,"endColumn":9},{"ruleId":"68","severity":1,"message":"81","line":14,"column":3,"nodeType":"70","messageId":"71","endLine":14,"endColumn":11},{"ruleId":"68","severity":1,"message":"82","line":16,"column":3,"nodeType":"70","messageId":"71","endLine":16,"endColumn":8},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Emergencycontacts' is defined but never used.","Identifier","unusedVar","'setTab' is assigned a value but never used.","'wrapperStyle' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'Radio' is defined but never used.","'Cascader' is defined but never used.","'InputNumber' is defined but never used.","'TreeSelect' is defined but never used.","'Switch' is defined but never used.","'Checkbox' is defined but never used.","'Space' is defined but never used.","no-global-assign","no-unsafe-negation"]